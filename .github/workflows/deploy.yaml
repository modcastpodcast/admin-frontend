name: Docker

on:
  push:
    branches:
      - main

jobs:
  push_docker_image:
    name: Build & Publish Docker image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: borales/actions-yarn@v2.0.0
        with:
          cmd: install
      - uses: borales/actions-yarn@v2.0.0
        env:
          REACT_APP_GIT_SHA: ${{ github.sha }}
        with:
          cmd: build

      - name: Create Sentry release
        uses: getsentry/action-release@v1.0.0
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: modcast-podcast
          SENTRY_PROJECT: admin-frontend
        with:
          environment: production
          sourcemaps: ./build/static/js/

      - name: Build Docker image
        run: docker build . --file Dockerfile -t modcastpodcast/admin-frontend/frontend:latest -t modcastpodcast/admin-frontend/frontend:${{ github.sha }}

      - name: Publish Docker image with Git SHA
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: modcastpodcast/admin-frontend/frontend:${{ github.sha }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
      
      - name: Publish Docker image with latest
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: modcastpodcast/admin-frontend/frontend:latest
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com

  deploy_to_kubernetes:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: [push_docker_image]

    steps:
      - uses: actions/checkout@v2

      - uses: Azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}

      - uses: Azure/k8s-deploy@v1
        with:
          namespace: 'default'
          manifests: |
            deployment.yaml
          images: 'docker.pkg.github.com/modcastpodcast/admin-frontend/frontend:${{ github.sha }}'
          imagepullsecrets: |
            githubpackage
          kubectl-version: 'latest'
